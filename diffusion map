library(Biobase)
library(reshape2)
library(ggplot2)
library(cowplot)
library(Matrix)
library(RColorBrewer)
library(Seurat)
library(slingshot)
library(uwot)
library(mclust)
library(grDevices)
library(tradeSeq)
library(pheatmap)
library(ggridges)
library(destiny)
library(rgl)
library(scatterplot3d)
library(tidyverse)
colorSpace <- c("#f45da7","#fdf1a6","#d8d8ea","#b779b2",'#E41A1C','#377EB8','#4DAF4A','#984EA3','#F29403','#F781BF','#BC9DCC','#A65628','#54B0E4','#222F75','#1B9E77','#B2DF8A','#E3BE00',
                '#FB9A99','#E7298A','#910241','#00CDD1','#A6CEE3','#CE1261','#5E4FA2','#8CA77B','#00441B','#DEDC00','#B3DE69','#8DD3C7','#999999')
DimPlot(object = scObject, reduction = "tsne", group.by="cellType", cols=colorSpace, pt.size=0.1)
vg <- FindVariableFeatures(object = scObject, selection.method = "vst", nfeatures = 500, verbose = FALSE)$RNA@var.features
indata <- scObject$RNA@data[vg, ] 
DC.dm <- run_diffMap(indata, scObject$cellType)
scObject.sub <- subset(scObject, cells = rownames(DC.dm@eigenvectors))
identical( rownames(DC.dm@eigenvectors), rownames(scObject.sub@meta.data) )
clusterPalette <- c("FCER1A+DC"=colorSpace[1], "FCGR2B+DC"=colorSpace[2], "LAMP3+DC"=colorSpace[3],"XCR1+DC"=colorSpace[4])
conditionPalette <- c("HD_PBMC"=colorSpace[5], "HD_Tonsil"=colorSpace[6], "HPV-_PBMC"=colorSpace[7], "HPV-_Tissue"=colorSpace[8], "HPV+_PBMC"=colorSpace[9], "HPV+_Tissue"=colorSpace[10])
plot1=plot_dm_3D(dm=DC.dm, dc=c(1:3), condition=scObject.sub$cellType, colour=clusterPalette)
rgl.postscript("plot1.pdf", "pdf", drawText = TRUE)
plot2=plot_dm_3D(dm=DC.dm, dc=c(1:3), condition=scObject.sub$Tissue_Type, colour=conditionPalette)
rgl.postscript("plot2.pdf", "pdf", drawText = TRUE)

rd <- as.data.frame(DC.dm@eigenvectors)[,1:3]
cl <- as.character(scObject.sub$cellType)
names(cl) <- rownames(rd)
crv <- slingshot(rd, cl, start.clus = "FCER1A+DC")
plot_dm_3D(dm=DC.dm, dc=c(1:3), condition=scObject.sub$cellType, colour=clusterPalette)
lin1 <- slingCurves(crv)[[1]]$s[slingCurves(crv)[[1]]$ord, ]
lin2 <- slingCurves(crv)[[2]]$s[slingCurves(crv)[[2]]$ord, ]
plot1lingage=plot3d(lin1, type="l", lwd=5, col="black", add=TRUE)
rgl.postscript("plot1lingage.pdf", "pdf", drawText = TRUE)
plot2lingage=plot3d(lin2, type="l", lwd=5, col="black", add=TRUE)
rgl.postscript("plot2lingage.pdf", "pdf", drawText = TRUE)
plot_dm_3D_lineage(dm=DC.dm, crv=crv, dc=c(1:3), lineage= "Lineage1", condition=scObject.sub$cellType, colour=clusterPalette, ifpesudo=FALSE)
linage1=plot3d(lin1, type="l", lwd=5, col="black", add=TRUE)
rgl.postscript("linage1.pdf", "pdf", drawText = TRUE)
plot_dm_3D_lineage(dm=DC.dm, crv=crv, dc=c(1:3), lineage= "Lineage2", condition=scObject.sub$cellType, colour=clusterPalette, ifpesudo=FALSE)
linage2=plot3d(lin2, type="l", lwd=5, col="black", add=TRUE)
rgl.postscript("linage2.pdf", "pdf", drawText = TRUE)
plot_dm_3D_lineage(dm=DC.dm, crv=crv, dc=c(1:3), lineage= "Lineage1", condition=scObject.sub$cellType, colour=clusterPalette, ifpesudo=TRUE)
rgl.postscript("plot_dm_3D_lineage", "pdf", drawText = TRUE)
plot_dm_3D_lineage(dm=DC.dm, crv=crv, dc=c(1:3), lineage= "Lineage2", condition=scObject.sub$cellType, colour=clusterPalette, ifpesudo=TRUE)
DC_pseudotime <- get_pseudotime(crv, wthres=0.9)
pseudotime_lin <- DC_pseudotime[,"Lineage1"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
pseudotime_lin1_percent <- (pseudotime_lin*100)/max_pseudotime

pseudotime_lin <- DC_pseudotime[,"Lineage2"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
pseudotime_lin2_percent <- (pseudotime_lin*100)/max_pseudotime

DC_pseudotime[,"Lineage1"] <- pseudotime_lin1_percent
DC_pseudotime[,"Lineage2"] <- pseudotime_lin2_percent
clusterPalette <- c("FCER1A+DC"=colorSpace[1], "FCGR2B+DC"=colorSpace[2], "LAMP3+DC"=colorSpace[3], "XCR1+DC"=colorSpace[4])
conditionPalette <- c("HD_PBMC"=colorSpace[4], "HD_Tonsil"=colorSpace[5], "HPV-_PBMC"=colorSpace[6], "HPV-_Tissue"=colorSpace[7], "HPV+_PBMC"=colorSpace[8], "HPV+_Tissue"=colorSpace[9])
lineagePalette <- c("#ff6663", "#3b3561") 
plot_smoothed_gene_per_lineage(
  rpkm_matrix= scObject.sub$RNA@data, # 
  pseudotime=DC_pseudotime,  #
  lin=c(1), # 
  geneName="XCR1",  #
  stages=scObject.sub$Tissue_Type, #
  clusters=scObject.sub$cellType, #
  stage_colors=conditionPalette, #
  cluster_colors=clusterPalette,
  lineage_colors=lineagePalette )
  plot_smoothed_gene_per_lineage(
  rpkm_matrix= scObject.sub$RNA@data, # 
  pseudotime=DC_pseudotime,  #
  lin=c(1,2), # 
  geneName="FCGR2B",  #
  stages=scObject.sub$Tissue_Type, # 
  clusters=scObject.sub$cellType, # 
  stage_colors=conditionPalette, # 
  cluster_colors=clusterPalette,
  lineage_colors=lineagePalette )
  DC <- fitGAM(as.matrix(scObject.sub$RNA@counts[scObject.sub$RNA@var.features[1:16816], ]), sds= crv) # 这一步非常消耗内存
ATres <- associationTest(DC)
topgenes <- rownames(ATres[order(ATres$pvalue), ])[1:200]
de_matrix <- as.matrix(scObject.sub$RNA@data[topgenes, ])
L1_lineage <- DC_pseudotime[!is.na(DC_pseudotime[,1]),1]
L1_ordered_lineage <- L1_lineage[order(L1_lineage, decreasing = FALSE)]
L1_cells <- de_matrix[,names(L1_ordered_lineage)]
L2_lineage <- DC_pseudotime[!is.na(DC_pseudotime[,2]),2]
L2_ordered_lineage <- L2_lineage[order(L2_lineage, decreasing = TRUE)]
L2_cells <- de_matrix[,names(L2_ordered_lineage)]
L1_lineage_cells <- names(L1_ordered_lineage)
length(L1_lineage_cells) # [1] 1548
L2_lineage_cells <- names(L2_ordered_lineage)
length(L2_lineage_cells) # [1] 1161
common_cells <- intersect(L1_lineage_cells, L2_lineage_cells) # 255
L1_spe_cells <- setdiff(L1_lineage_cells, L2_lineage_cells) # 1293
L2_spe_cells <- setdiff(L2_lineage_cells, L1_lineage_cells) # 906
L1_cellLin <- c(taRifx::rep_along("common cells", common_cells), taRifx::rep_along("L1 cells", L1_spe_cells))
names(L1_cellLin) <- c(common_cells, L1_spe_cells)
L1_cellLin <- L1_cellLin[match(colnames(L1_cells),names(L1_cellLin) )]
L2_cellLin <- c(taRifx::rep_along("common cells", common_cells), taRifx::rep_along("L2 cells", L2_spe_cells))
names(L2_cellLin) <- c(common_cells, L2_spe_cells)
L2_cellLin <- L2_cellLin[match(colnames(L2_cells),names(L2_cellLin) )]
cellType_L1 <- scObject.sub$cellType[colnames(L1_cells)]
cellType_L2 <- scObject.sub$cellType[colnames(L2_cells)]
Tissue_Type_L1 <- scObject.sub$Tissue_Type[colnames(L1_cells)]
Tissue_Type_L2 <- scObject.sub$Tissue_Type[colnames(L2_cells)]
colnames(L1_cells) <- paste(colnames(L1_cells), "L1", sep="_")
names(L1_cellLin) <- colnames(L1_cells)
colnames(L2_cells) <- paste(colnames(L2_cells), "L2", sep="_")
names(L2_cellLin) <- colnames(L2_cells)
cellLin <- c(L2_cellLin, L1_cellLin)
cellType <- c(cellType_L2, cellType_L1)
tissueType <- c(Tissue_Type_L2, Tissue_Type_L1)
peusotime <- c()
L2_cells_smooth <- smooth_gene_exp(L2_cells, L2_ordered_lineage, span=0.4)
L1_cells_smooth <- smooth_gene_exp(L1_cells, L1_ordered_lineage, span=0.4)
data_heatmap <- data.frame(L2_cells_smooth, L1_cells_smooth, check.names=FALSE)
set.seed(123)
gene_clustering <- pheatmap::pheatmap(data_heatmap, scale="row", clustering_method="ward.D", silent=TRUE)
clusters <- cutree(gene_clustering$tree_row, k = 3) # 设置想提取的基因表达patterns,与下面cutree_rows参数保持一致
clustering <- data.frame(clusters)
clustering[,1] <- as.character(clustering[,1])
colnames(clustering) <- "Gene_Clusters"
annotation_row <- data.frame(clustering=clustering)
annotation_col <- data.frame(
	Pesudotime=c(L2_ordered_lineage,L1_ordered_lineage),
	cellLineage=cellLin,
	CellType=cellType,
	TissueType=tissueType)
rownames(annotation_col) <- colnames(data_heatmap)
cold <- colorRampPalette(c('#f7fcf0','#41b6c4','#253494','#081d58','#081d58'))
warm <- colorRampPalette(c('#ffffb2','#fecc5c','#e31a1c','#800026','#800026'))
mypalette <- c(rev(cold(100)), warm(100))
groupPalette <- c("common cells"="#c8c8c8", "L1 cells"="#3b3561", "L2 cells"="#ff6663")
clusterPalette <- c("FCER1A+DC"=colorSpace[1], "FCGR2B+DC"=colorSpace[2], "LAMP3+DC"=colorSpace[3],"XCR1+DC"=colorSpace[4])
conditionPalette <- c("HD_PBMC"=colorSpace[5], "HD_Tonsil"=colorSpace[6], "HPV-_PBMC"=colorSpace[7], "HPV-_Tissue"=colorSpace[8], "HPV+_PBMC"=colorSpace[9], "HPV+_Tissue"=colorSpace[10])
genePalette <- c("1"="#a6cee3", "2"="#1f78b4", "3"="#b2df8a", "4"="#33a02c")
peusotimePalette <- rev(colorRampPalette(rev(brewer.pal(11,'Spectral')[-6])(20))
annotation_colors <- list(
  Pesudotime=peusotimePalette,
  cellLineage=groupPalette,
  cellType=clusterPalette,
  TissueType=conditionPalette,
  clustering=genePalette)
pheatmap(data_heatmap, scale="row", gaps_col=length(cellType_L2), show_colnames=FALSE, show_rownames=FALSE, cluster_cols=FALSE,
	clustering_method="ward.D", annotation_row=annotation_row, annotation_col=annotation_col, annotation_colors=annotation_colors,
	cutree_rows=3, annotation_names_row=FALSE, color=mypalette)
  lineage_colors=lineagePalette )
